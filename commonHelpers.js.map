{"version":3,"file":"commonHelpers.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["const form = document.querySelector('.form');\nconst loader = document.querySelector('.loader');\n\nfunction showLoader() {\n    loader.style.display = 'inline-block';\n}\n\nfunction hideLoader() {\n    loader.style.display = 'none';\n}\n\nfunction getImages(imgName) {\n    showLoader();\n    const BASE_URL = 'https://pixabay.com';\n    const END_POINT = '/api/';\n    const options = {\n        key: '42343826-37f50c073d3cb7aafd48234dd',\n        q: imgName,\n        image_type: 'photo',\n        orientation: 'horizontal',\n        safesearch: 'true',\n    }\n    const PARAMS = new URLSearchParams(options);    \n    const url = BASE_URL + END_POINT + '?' + PARAMS;\n\n    return fetch(url, options)\n        .then(res => {\n            hideLoader();\n            if (!res.ok) {\n                throw new Error('Server responded with error');\n            }\n            return res.json();\n        })\n}\n\nexport { getImages };\n","export default function renderCard(cards) {\n    const gallery = document.querySelector('.cards');\n    gallery.innerHTML = '';\n    cards.forEach(card => {\n        const cardHTML =\n            `<li class=\"card\"> \n                <a class=\"card-link\" href=\"${card.largeImageURL}\">\n                    <img class=\"card-img\" src=\"${card.webformatURL}\" alt=\"${card.tags}\" data-source=\"${card.largeImageURL}\" />\n                </a>\n                <div class=\"card-data\">\n                    <div class=\"data-wrap\">\n                        <p>Likes: </p>\n                        <span>${card.likes}</span>\n                    </div>\n                    <div class=\"data-wrap\">\n                        <p>Views: </p>\n                        <span>${card.views}</span>\n                    </div>\n                    <div class=\"data-wrap\">\n                        <p>Comments: </p>\n                        <span>${card.comments}</span>\n                    </div>\n                    <div class=\"data-wrap\">\n                        <p>Downloads: </p>\n                        <span>${card.downloads}</span>\n                    </div>\n                </div>\n             </li>`;\n        gallery.innerHTML += cardHTML;\n    })\n}\n","import { getImages } from './js/pixabay-api.js';\nimport renderCard from './js/render-functions.js';\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\nimport SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', event => {\n    event.preventDefault();\n    const userInput = event.target.elements.search.value;\n\n    if (userInput === \"\") {\n        iziToast.show({\n            title: 'Error',\n            backgroundColor: '#EF4040',\n            messageColor: '#FFFFFF',\n            titleColor: '#FFFFFF',\n            message: 'Please enter your search!',\n            position: 'bottomRight'\n        });\n        return;\n    }\n\n    getImages(userInput)\n        .then(data => {\n            if (data.hits.length === 0) {\n                iziToast.show({\n                    title: 'Error',\n                    backgroundColor: '#EF4040',\n                    messageColor: '#FFFFFF',\n                    titleColor: '#FFFFFF',\n                    message: 'Sorry, there are no images matching your search. Please try again!',\n                    position: 'bottomRight'\n                })\n            } else {\n                renderCard(data.hits);\n                const lightbox = new SimpleLightbox(\".cards a\", { captionsData: \"alt\", captionDelay: 250, captionPosition: 'bottom' });\n                lightbox.refresh();\n            }\n        })\n        .catch(error => {\n            console.log(error);\n        })\n})\n"],"names":["loader","showLoader","hideLoader","getImages","imgName","BASE_URL","END_POINT","options","PARAMS","url","res","renderCard","cards","gallery","card","cardHTML","form","event","userInput","iziToast","data","SimpleLightbox","error"],"mappings":"wvBAAa,SAAS,cAAc,OAAO,EAC3C,MAAMA,EAAS,SAAS,cAAc,SAAS,EAE/C,SAASC,GAAa,CAClBD,EAAO,MAAM,QAAU,cAC3B,CAEA,SAASE,GAAa,CAClBF,EAAO,MAAM,QAAU,MAC3B,CAEA,SAASG,EAAUC,EAAS,CACxBH,IACA,MAAMI,EAAW,sBACXC,EAAY,QACZC,EAAU,CACZ,IAAK,qCACL,EAAGH,EACH,WAAY,QACZ,YAAa,aACb,WAAY,MACf,EACKI,EAAS,IAAI,gBAAgBD,CAAO,EACpCE,EAAMJ,EAAWC,EAAY,IAAME,EAEzC,OAAO,MAAMC,EAAKF,CAAO,EACpB,KAAKG,GAAO,CAET,GADAR,IACI,CAACQ,EAAI,GACL,MAAM,IAAI,MAAM,6BAA6B,EAEjD,OAAOA,EAAI,MACvB,CAAS,CACT,CCjCe,SAASC,EAAWC,EAAO,CACtC,MAAMC,EAAU,SAAS,cAAc,QAAQ,EAC/CA,EAAQ,UAAY,GACpBD,EAAM,QAAQE,GAAQ,CAClB,MAAMC,EACF;AAAA,6CACiCD,EAAK,aAAa;AAAA,iDACdA,EAAK,YAAY,UAAUA,EAAK,IAAI,kBAAkBA,EAAK,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA,gCAKzFA,EAAK,KAAK;AAAA;AAAA;AAAA;AAAA,gCAIVA,EAAK,KAAK;AAAA;AAAA;AAAA;AAAA,gCAIVA,EAAK,QAAQ;AAAA;AAAA;AAAA;AAAA,gCAIbA,EAAK,SAAS;AAAA;AAAA;AAAA,oBAItCD,EAAQ,WAAaE,CAC7B,CAAK,CACL,CCvBA,MAAMC,EAAO,SAAS,cAAc,OAAO,EAE3CA,EAAK,iBAAiB,SAAUC,GAAS,CACrCA,EAAM,eAAc,EACpB,MAAMC,EAAYD,EAAM,OAAO,SAAS,OAAO,MAE/C,GAAIC,IAAc,GAAI,CAClBC,EAAS,KAAK,CACV,MAAO,QACP,gBAAiB,UACjB,aAAc,UACd,WAAY,UACZ,QAAS,4BACT,SAAU,aACtB,CAAS,EACD,MACH,CAEDhB,EAAUe,CAAS,EACd,KAAKE,GAAQ,CACNA,EAAK,KAAK,SAAW,EACrBD,EAAS,KAAK,CACV,MAAO,QACP,gBAAiB,UACjB,aAAc,UACd,WAAY,UACZ,QAAS,qEACT,SAAU,aAC9B,CAAiB,GAEDR,EAAWS,EAAK,IAAI,EACH,IAAIC,EAAe,WAAY,CAAE,aAAc,MAAO,aAAc,IAAK,gBAAiB,QAAU,CAAA,EAC5G,QAAO,EAEhC,CAAS,EACA,MAAMC,GAAS,CACZ,QAAQ,IAAIA,CAAK,CAC7B,CAAS,CACT,CAAC"}